<!DOCTYPE HTML>
<html lang="en">
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
  <title></title>
 </head>
<body onload="setInterval(loop,1000/30);">  
<div style="margin: 0 auto; max-width: 700px; background-color: #999999; padding: 15px">
  <div id="container" style="margin: 0 auto; border: 1px solid black; width: 400px; height: 400px;cursor: none" onclick="click()"></div>
  <table><tr>
  <td>Input:<td><input type="text" id="inN" /><br></tr>
  <tr><td>Output:<td><textarea id="out1" cols=40 rows=6></textarea><br></tr>
  <tr><td><button onclick="update()" >Go=></button></tr>

  <tr><td><button onclick="makeSquares()">Make=></button></tr>
  <tr><td>Squares:<td><input id="sqCount"" type=text>
  <tr><td>Layout:<td><textarea rows=6 cols=40 id="out2"></textarea>

  <tr><td>Line:<td>x1:<input id="x1" type="text"><td>y1:<input id="y1" type="text">
  <tr><td><td>x2:<input id="x2" type="text"><td>y2:<input id="y2" type="text">
  </table>
</div>
  
  <script type="text/javascript">
    var click1 = new Point (-1, -1);
    var click2 = new Point (-1, -1);
    var pointArr = new Array();
    var squareArr = new Array();
    var squareid = 0;
    var n = 0;
    var padding = 25;
    var spacing = 380;
    var mousePos;
    var message;
    //CANVAS VARS
    var container, canvas, context;
    var w = 400; var h = 400;
    init();
    
    function loop() {
      drawDots();
    }
        
    function getMousePos(canvas, evt) {
      var rect = canvas.getBoundingClientRect();
      x = evt.clientX - rect.left;
      y = evt.clientY - rect.top;
      dotx = Math.floor((x / (spacing/n)));
      doty = Math.floor((y / (spacing/n)));
      return { x, y, dotx, doty };
    } 

    function init() {
        container = document.getElementById('container');
        canvas = document.createElement("canvas");
        canvas.width = w;
        canvas.height = h;
        container.appendChild(canvas);
        context = canvas.getContext("2d");
        context.fillStyle = "#666";
        context.fillRect(0, 0, w, h);
        canvas.addEventListener('mousemove', function(evt) {
          mousePos = getMousePos(canvas, evt);
          message = 'Mouse position: ' + mousePos.x + ',' + mousePos.y + ":: (" + mousePos.dotx + "," + mousePos.doty + ")";
          $("#out1").val(message);
        }, false);
        //Handle Clicks
        canvas.addEventListener('click', function(evt) {
          mousePos = getMousePos(canvas, evt);
          if (click1.x == mousePos.dotx && click1.y == mousePos.doty) { click1 = new Point (-1, -1); click2 = new Point (-1, -1)}
          else if (click1.x == -1) {
            click1.x = mousePos.dotx;
            click1.y = mousePos.doty;
          }
          else if (click2.x == -1) {
            click2.x = mousePos.dotx;
            click2.y = mousePos.doty;
          }
        }, false);
    }
    
    function update(){
      n = $("#inN").val();
      output = "n: " + n + "\n" + "Total Points: " + n*n + "\n";
      count = 0;
      for (x=0;x<n;x++){
        for (y=0;y<n;y++){
          pointArr.push(new Point(x,y))
          output += "(" + pointArr[count].x + "," + pointArr[count].y + ")";
          count ++;
        }
        output += "\n"
      }
      $("#out1").val(output);
    }
    
    function Point (x,y)
    {
      this.x = x;
      this.y = y;
    }
    function Square (){
      this.id = squareid;
      this.p1 = new Point(0,0);
      this.p1 = new Point(0,0);
      this.p1 = new Point(0,0);
      this.p1 = new Point(0,0);
      this.l1 = 0;
      this.l2 = 0;
      this.l3 = 0;
      this.l4 = 0;
      squareid++;
    }
    function makeSquares(){
      sq = Math.pow((n-1),2);
      for (i=0;i<sq;i++){
        squareArr.push(new Square);
      }
      $("#sqCount").val(sq);
      output2 = "";
      for (i = 1;i<=sq;i++){
        row = Math.ceil(i/(n-1));
        col = (i - ((n-1) * (row - 1)));
        squareArr[i-1].p1 = new Point(row -1, col -1);
        squareArr[i-1].p2 = new Point(row -1, col);
        squareArr[i-1].p3 = new Point(row, col -1);
        squareArr[i-1].p4 = new Point(row, col);
        output2 += "Sq: " + (i-1) + " :: " 
            + "(" + squareArr[i-1].p1.x + ", " + squareArr[i-1].p1.y + ") " 
            + "(" + squareArr[i-1].p2.x + ", " + squareArr[i-1].p2.y + ") "
            + "(" + squareArr[i-1].p3.x + ", " + squareArr[i-1].p3.y + ") "
            + "(" + squareArr[i-1].p4.x + ", " + squareArr[i-1].p4.y + ") \n"
            
        $("#out2").val(output2)
      }
    }
    
    function paintDot(x,y,rad,color){
      context.beginPath();
      context.arc(x,y,rad, 0, 2 * Math.PI, false);
      context.fillStyle = color;
      context.fill();
      context.lineWidth = 2;
      context.strokeStyle = '#003300';
      context.stroke();
    }
    
    function drawDots(){
      //Background
      context.fillStyle = "#666";
      context.fillRect(0, 0, w, h);
      //All Dots
      for (var i = 0; i < pointArr.length; i++) {
	     var point = pointArr[i];
       paintDot((point.x * spacing/n) + padding, (point.y * spacing/n) + padding, 5,'white');
	    }
      //cursor dots
      if (mousePos.dotx < n && mousePos.doty < n){ paintDot((mousePos.dotx * spacing/n) + padding, (mousePos.doty * spacing/n) + padding, 15,"rgba(0,255,0,0.25)"); }
      if (click1.x > -1){ paintDot((click1.x * spacing/n) + padding, (click1.y * spacing/n) + padding, 15,"rgba(0,255,0,0.25)"); }
      if (click2.x > -1){ paintDot((click2.x * spacing/n) + padding, (click2.y * spacing/n) + padding, 15,"rgba(0,255,0,0.25)"); }
    }
  </script>
</body>
</html>
